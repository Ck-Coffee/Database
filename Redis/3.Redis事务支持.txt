1. MULTI
	用于标记事务块的开始。Redis会将后续的命令逐个放入队列中，然后才能使用EXEC命令原子化地执行这个命令序列。

2. EXEC
	在一个事务中执行所有先前放入队列的命令，然后恢复正常的连接状态。

	当使用WATCH命令时，只有当受监控的键没有被修改时，EXEC命令才会执行事务中的命令，这种方式利用了检查再设置（CAS）的机制。

	这个命令的运行格式如下所示：

	EXEC
	这个命令的返回值是一个数组，其中的每个元素分别是原子化事务中的每个命令的返回值。 当使用WATCH命令时，如果事务执行中止，那么EXEC命令就会返回一个Null值。

3. DISCARD
	清除所有先前在一个事务中放入队列的命令，然后恢复正常的连接状态。

	如果使用了WATCH命令，那么DISCARD命令就会将当前连接监控的所有键取消监控。

	这个命令的运行格式如下所示：

	DISCARD
	这个命令的返回值是一个简单的字符串，总是OK。

4. WATCH
	当某个事务需要按条件执行时，就要使用这个命令将给定的键设置为受监控的。

	这个命令的运行格式如下所示：

	WATCH key [key ...]
	这个命令的返回值是一个简单的字符串，总是OK。

	对于每个键来说，时间复杂度总是O(1)。

5. UNWATCH
	清除所有先前为一个事务监控的键。
	如果你调用了EXEC或DISCARD命令，那么就不需要手动调用UNWATCH命令。
	这个命令的运行格式如下所示：
	UNWATCH
	这个命令的返回值是一个简单的字符串，总是OK。

	时间复杂度总是O(1)。
	
	#######
	修复：Redis-check-aof --fix
		  Redis-check-rdb --fix
	#######